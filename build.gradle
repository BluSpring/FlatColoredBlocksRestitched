plugins {
    id 'fabric-loom' version '1.0-SNAPSHOT'
    id 'maven-publish'
}

version = "mc${project.mc_version}-${project.mod_version}"
group= "mod.flatcoloredblocks"
archivesBaseName = 'flatcoloredblocksrestitched'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '17' // Need this here so eclipse task generates correctly.

loom {
    accessWidenerPath = file('src/main/resources/flatcoloredblocks.accesswidener')
}

repositories {
    maven {
        url = uri("https://ueaj.dev/maven")
        // for 0.4.2 and older
        // url uri("https://raw.githubusercontent.com/Devan-Kerman/Devan-Repo/master/")
    }
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }

    flatDir {
        dir 'libs'
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.mc_version}"
    mappings loom.officialMojangMappings()

    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation("net.devtech:arrp:0.6.4")

    // Bits & Chisels testing
    //modRuntimeOnly "curse.maven:bits-and-chisels-420709:3841599"

    // Used by Chisels & Bits 1.19
    implementation (name: 'lz4-pure-java-1.8.0', ext: 'jar')

    // Chisels & Bits conversion
    modImplementation (name: 'chisels-and-bits-fabric-1.3.122', ext: 'jar')
    modImplementation (name: 'scena-fabric-1.0.84', ext: 'jar')
    modImplementation (name: 'saecularia-caudices-fabric-1.0.11', ext: 'jar')
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
                    "Implementation-Title": project.name,
                    "Implementation-Version": "${version}",
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")],)
    }
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'fabric.mod.json'

        // replace version and mcversion
        expand 'version':project.version
    }
}